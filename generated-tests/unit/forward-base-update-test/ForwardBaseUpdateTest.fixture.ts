import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";
import type { ForwardBaseUpdateTest } from "../../../typechain-types/contracts/FowardBaseUpdateTest.sol/ForwardBaseUpdateTest";
import type { ForwardBaseUpdateTest__factory } from "../../../typechain-types/factories/contracts/FowardBaseUpdateTest.sol/ForwardBaseUpdateTest__factory";

export async function forwardBaseUpdateTestFixture(): Promise<{
  forwardBaseUpdateTest: ForwardBaseUpdateTest;
}> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const ForwardBaseUpdateTestFactory: ForwardBaseUpdateTest__factory =
    (await ethers.getContractFactory(
      "ForwardBaseUpdateTest"
    )) as ForwardBaseUpdateTest__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof ForwardBaseUpdateTestFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const forwardBaseUpdateTest: ForwardBaseUpdateTest =
    (await ForwardBaseUpdateTestFactory.connect(deployer).deploy(
      ...args
    )) as ForwardBaseUpdateTest;

  return { forwardBaseUpdateTest };
}
