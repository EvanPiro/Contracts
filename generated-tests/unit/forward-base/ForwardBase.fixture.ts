import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";
import type { ForwardBase } from "../../../typechain-types/contracts/ForwardBase";
import type { ForwardBase__factory } from "../../../typechain-types/factories/contracts/ForwardBase__factory";

export async function forwardBaseFixture(): Promise<{
  forwardBase: ForwardBase;
}> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const ForwardBaseFactory: ForwardBase__factory =
    (await ethers.getContractFactory("ForwardBase")) as ForwardBase__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof ForwardBaseFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const forwardBase: ForwardBase = (await ForwardBaseFactory.connect(
    deployer
  ).deploy(...args)) as ForwardBase;

  return { forwardBase };
}
