import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";
import type { PriceFeed } from "../../../typechain-types/contracts/PriceFeed";
import type { PriceFeed__factory } from "../../../typechain-types/factories/contracts/PriceFeed__factory";

export async function priceFeedFixture(): Promise<{ priceFeed: PriceFeed }> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const PriceFeedFactory: PriceFeed__factory = (await ethers.getContractFactory(
    "PriceFeed"
  )) as PriceFeed__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof PriceFeedFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const priceFeed: PriceFeed = (await PriceFeedFactory.connect(deployer).deploy(
    ...args
  )) as PriceFeed;

  return { priceFeed };
}
