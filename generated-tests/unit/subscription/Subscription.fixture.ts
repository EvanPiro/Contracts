import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";
import type { Subscription } from "../../../typechain-types/contracts/Subscription";
import type { Subscription__factory } from "../../../typechain-types/factories/contracts/Subscription__factory";

export async function subscriptionFixture(): Promise<{
  subscription: Subscription;
}> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const SubscriptionFactory: Subscription__factory =
    (await ethers.getContractFactory("Subscription")) as Subscription__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof SubscriptionFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const subscription: Subscription = (await SubscriptionFactory.connect(
    deployer
  ).deploy(...args)) as Subscription;

  return { subscription };
}
