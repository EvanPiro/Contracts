import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";
import type { TransferFeeToken } from "../../../typechain-types/contracts/TransferFeeToken";
import type { TransferFeeToken__factory } from "../../../typechain-types/factories/contracts/TransferFeeToken__factory";

export async function transferFeeTokenFixture(): Promise<{
  transferFeeToken: TransferFeeToken;
}> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const TransferFeeTokenFactory: TransferFeeToken__factory =
    (await ethers.getContractFactory(
      "TransferFeeToken"
    )) as TransferFeeToken__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof TransferFeeTokenFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const transferFeeToken: TransferFeeToken =
    (await TransferFeeTokenFactory.connect(deployer).deploy(
      ...args
    )) as TransferFeeToken;

  return { transferFeeToken };
}
